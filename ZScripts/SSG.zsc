Class SSG : BDoomWeapon replaces Supershotgun
{
bool ShotFired;
Default
	{
	Tag "$TAG_SUPERSHOTGUN";
	weapon.selectionorder 40;
	Weapon.AmmoType		"Shell";
	Weapon.AmmoUse		1;
	Weapon.AmmoGive		0;
	Weapon.AmmoType2	"Shell";
	Weapon.AmmoUse2		1;
	Weapon.AmmoGive2	8;
	weapon.slotnumber 	3;
	weapon.slotpriority 1;
	}
override string PickupMessage ()
	{
		return "$GOTSHOTGUN2"; 
	}
override string GetObituary (Actor victim, Actor inflictor, Name mod, bool playerattack)
    {
		return "$OB_MPSSHOTGUN"; 
    }
override void Tick()
	{
	If (Owner)
		return;
	else
		{
			pickupsound = "weapons/ssg/close";
		}
	Super.Tick();
	}
override void DoEffect()
	{
	if (owner)
		{
			Ammo1 = ammo(Owner.FindInventory("Shell"));
			ammouse1 = 2;
			ammouse2 = 1;
			bNOAUTOFIRE = false;
			bAMMO_OPTIONAL = false;
		}
	Super.DoEffect();
	}
states
{
	Spawn:
		SGN2 A 1;
		loop;
	// Loadsprites:
		// SH2L ABCDEF 0;
		// SH2M ABCDEF 0; 
		// SH2O ABCDEF 0;
		// stop;
	Spawn:
		SGN2 A 1 NoDelay A_JumpIf(fdoom_weapons == 2,1);
		loop;
		ASSG Z 1;
		loop;
	Select:
		TNT1 A 0 A_JumpIf(fdoom_weapons==1,"Select.Enhanced");
		// TNT1 A 0 A_JumpIf(GetCVAR("fdoom_weapons")==1,"Select.Enhanced")
		SHT2 A 0 A_WeaponReady(WRF_NOFIRE);
		SHT2 A 1 A_Raise();
		goto ready;
	Deselect:
		TNT1 A 0 A_JumpIf(fdoom_weapons==1,"Deselect.Enhanced");
		SHT2 A 1 A_Lower();
		wait;
	Ready:
		TNT1 A 0 A_JumpIf(fdoom_weapons==1,"Ready.Enhanced");
		SHT2 A 1 A_WeaponReady(WRF_NOSECONDARY);
		loop;
	Fire:
	//
		TNT1 A 0 A_JumpIf(fdoom_weapons==1,"Fire.Enhanced");
		TNT1 A 0 A_Gunflash();
		SHT2 A 0 A_WeaponOffset(0,32);//0,0
		SHT2 A 3;
		SHT2 A 2 {
				A_PlaySound("weapons/sshotf",5);//fire2
				// A_PlaySound("weapons/ssg/fire",5);
				if (fdoom_tracers == 1)
					A_FireBullets(11.2, 7.1, 16, 5, "FBulletPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 20, 5, "FBulletPuff",FBF_NORANDOMPUFFZ);
				}
		SHT2 A 2;
		SHT2 A 2;
		SHT2 A 1;
		TNT1 A 0 A_CheckReload();
		goto reload;
	Reload:
		TNT1 A 0 A_JumpIf(fdoom_weapons==1,"Reload.Enhanced");
		
		//reload double	open
		SHT2 A 3; //1
		SSGA B 2; 						//pB;(0,0)
		SHT2 B 3 A_WeaponOffset(-6,32);	//pC;oB(-6,0)
		SSGA C 4 A_WeaponOffset(0,32);	//pD;(0,0)
		SHT2 C 4 A_WeaponOffset(17,40);	//pE;oC(17,-8)
		SHT2 D 0 A_WeaponOffset(-36,32);	//pF;oD(-36,0)
		// SHT2 D 2 A_PlaySound("weapons/ssg/open");
		SHT2 D 2 A_PlaySound("weapons/sshoto");
		// SHT2 D 2 A_OpenShotgun2				
		SSGD K 1 A_WeaponOffset(0,32);	//pG;(0,0)
		
		TNT1 A 0 { 
			if (fdoom_debris ==1) {
				A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
		SSGD L 1;
		//
		SSGD MNO 2;						//pY = sA
		SSGD P 4;
		//
		SHT2 F 0 A_WeaponOffset(-23,32);	//pL;oF(-23,0)
		// SHT2 F 2 A_LoadShotgun2;
		// SHT2 F 2 A_PlaySound("weapons/ssg/in");
		SHT2 F 2 A_PlaySound("weapons/sshotl");
		//
		SSGC A 3 A_WeaponOffset(0,32);	//pM;(0,0)
		SSGC BCDE 2;						//pZ = sG
		SHT2 D 2 A_WeaponOffset(0,38);	//pQ;oG(0,-6)
		SHT2 B 0 A_WeaponOffset(27,50);	//pR;oH(15,0);oB+(27,-18)
		// SHT2 B 3 A_CloseShotgun2
		// SHT2 B 3 A_PlaySound("weapons/ssg/close");
		SHT2 B 3 A_PlaySound("weapons/sshotc");
		// TNT1 A 0 A_playsound("weapons/sshotc");
		SSGA B 3 A_WeaponOffset(10,42);	//pS;pB(10,-10)
		TNT1 A 0 A_Refire(); //("Fire")
		SHT2 A 0 A_WeaponOffset(0,32);	//pA;oA(0,0)
		SHT2 A 1 A_Refire();
		goto ready;
	Flash:
		// TNT1 A 0 A_JumpIf(GetCVAR("fdoom_muzzle")==1,"Flash1");
		SHT2 I 4 bright A_Light1();
		SHT2 J 3 bright A_light2();
		goto lightdone;
	Flash1:
		SH2P A 3 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(0,2);
			}
		SH2P A 2 bright {
			let fs = Player.FindPSprite(PSP_FLASH);
			fs.frame = random(3,5);
			}
		goto LightDone;
	Select.Enhanced:
		TNT1 A 0 A_PlaySound("weapons/ssg/draw");
		// TNT1 A 0 A_JumpIfInventory("SSGshotfired",1,"Select1")
		TNT1 A 0 A_JumpIf(invoker.ShotFired == true,"Select1");
		SHT2 A 0 A_WeaponReady(WRF_NOFIRE);
		SHT2 A 1 A_Raise();
		// SHT2 A 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	// Select1:
		// TNT1 AAAAAAAA 0 A_Raise();
		//// SH21 ABCDE 1 A_WeaponReady(WRF_NOFIRE)
		// SHT2 A 1 A_WeaponReady(WRF_NOFIRE);
		// goto ready;
	Deselect.Enhanced:
		SHT2 A 1 A_Lower(12);
		wait;
	Ready.Enhanced:
		SHT2 A 1 A_WeaponReady();
		goto ready;
	Fire.Enhanced:
		TNT1 A 0 A_JumpIf(invoker.ShotFired == true,"Reload.Enhanced1");
		SHT2 A 3 A_Gunflash();
		SHT2 A 1 {
				A_PlaySound("weapons/ssg/fire2",5);//fire2
				if (fdoom_tracers == 1)
					A_FireBullets(11.2, 7.1, 16, 5, "FBulletPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,0);
				else
					A_FireBullets(11.2, 7.1, 16, 5, "FBulletPuff",FBF_NORANDOMPUFFZ);
				}
		
		// SHT2 A 1 A_Playsound("weapons/ssg/fire", 6);
		SHT2 A 2;
		SHT2 A 2;
		TNT1 A 0 A_CheckReload();
		goto reload;
	AltFire:
		TNT1 A 0 A_JumpIf(invoker.ShotFired == true,"AltFireSecond");
		SH2N A 3 A_Gunflash("AltFlash.Right");
		SHT2 A 0 A_WeaponOffset(0,32);//0,0
		SHT2 A 1 {
				invoker.ShotFired = true;
				A_PlaySound("weapons/ssg/fire",5);
				if (fdoom_tracers == 1)
					A_FireBullets(10,6.5,8,5, "FBulletPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,1);
				else
					A_FireBullets(10,6.5,8,5,"FBulletPuff",FBF_NORANDOMPUFFZ);
				}
		TNT1 A 0;
		SHT2 A 2;
		SHT2 A 2;
		goto ready;
	AltFireSecond:
		SHT2 A 3 A_Gunflash("AltFlash.Left");
		SHT2 A 1 {
				invoker.ShotFired = false;
				A_PlaySound("weapons/ssg/fire",5);
				if (fdoom_tracers == 1)
					A_FireBullets(10,6.5,10,5, "FBulletPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BulletTracer",0,1);
				else
					A_FireBullets(10,6.5,10,5,"FBulletPuff",FBF_NORANDOMPUFFZ);
				}
		TNT1 A 0;
		SHT2 AA 2;
		SHT2 A 2;
		TNT1 A 0 A_CheckReload();
		goto Reload.Enhanced;
	Reload.Enhanced:
		//reload double	open
		SHT2 A 0 A_WeaponOffset(0,32);//0,0
		SHT2 A 3; //1
		SSGA B 2; 						//pB;(0,0)
		SHT2 B 3 A_WeaponOffset(-6,32);	//pC;oB(-6,0)
		SSGA C 4 A_WeaponOffset(0,32);	//pD;(0,0)
		SHT2 C 4 A_WeaponOffset(17,40);	//pE;oC(17,-8)
		SHT2 D 0 A_WeaponOffset(-36,32);	//pF;oD(-36,0)
		SHT2 D 2 A_playsound("weapons/ssg/open");
		// SHT2 D 2 A_OpenShotgun2
		
		SSGD K 1 A_WeaponOffset(0,32);	//pG;(0,0)
		TNT1 A 0 { 
			if (fdoom_debris ==1) {
				A_Eject("ShotgunCasing",16,-3.5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
				}
			}
		SSGD L 1;
		//
		SSGD MNO 2;						//pY = sA
		SSGD P 4;
		//
		SHT2 F 0 A_WeaponOffset(-23,32);	//pL;oF(-23,0)
		// SHT2 F 2 A_LoadShotgun2
		SHT2 F 2 A_playsound("weapons/ssg/in");
		//
		SSGC A 3 A_WeaponOffset(0,32);	//pM;(0,0)
		SSGC BCDE 2;					//pZ = sG
		SHT2 D 2 A_WeaponOffset(0,38);	//pQ;oG(0,-6)
		SHT2 B 0 A_WeaponOffset(27,50);	//pR;oH(15,0);oB+(27,-18)
		// SHT2 B 3 A_CloseShotgun2
		SHT2 B 3 A_playsound("weapons/ssg/close");
		SSGA B 3 A_WeaponOffset(10,42);	//pS;pB(10,-10)
		TNT1 A 0 A_Refire(); //("Fire")
		SHT2 A 0 A_WeaponOffset(0,32);	//pA;oA(0,0)
		SHT2 A 1 A_Refire();
		goto ready;
	Reload.Enhanced1:
		TNT1 A 0 A_CheckReload();
		TNT1 A 0 { invoker.ShotFired = false; }
		//reload double	open
		SHT2 A 0 A_WeaponOffset(0,32);//0,0
		SHT2 A 3; //1
		SSGA B 2; 						//pB;(0,0)
		SHT2 B 3 A_WeaponOffset(-6,32);	//pC;oB(-6,0)
		SSGA C 4 A_WeaponOffset(0,32);	//pD;(0,0)
		SHT2 C 4 A_WeaponOffset(17,40);	//pE;oC(17,-8)
		SHT2 D 0 A_WeaponOffset(-36,32);	//pF;oD(-36,0)
		SHT2 D 2 A_playsound("weapons/ssg/open");
		// SHT2 D 2 A_OpenShotgun2;
		
		SSGS K 1 A_WeaponOffset(0,32);	//pG;(0,0)
		TNT1 A 0 { 
			If(fdoom_debris == 1)
				A_Eject("ShotgunCasing",16,-5,6.5,frandom(0,1),FRandom(-2.5,-3),frandom(4,5));
			}
		SSGS L 1;
		//
		SSGS MNO 2;						//pY = sA
		SSGS P 4;
		//
		SHT2 F 0 A_WeaponOffset(-23,32);	//pL;oF(-23,0)
		// SHT2 F 2 A_LoadShotgun2;
		SHT2 F 4 A_playsound("weapons/ssg/in");
		SSGC A 3 A_WeaponOffset(0,32);	//pM;(0,0)
		SSGC BCDE 2;					//pZ = sG
		SHT2 D 2 A_WeaponOffset(0,38);	//pQ;oG(0,-6)
		SHT2 B 0 A_WeaponOffset(27,50);	//pR;oH(15,0);oB+(27,-18)
		// SHT2 B 3 A_CloseShotgun2;
		SHT2 B 3 A_playsound("weapons/ssg/close");
		SSGA B 3 A_WeaponOffset(10,42);	//pS;pB(10,-10)
		TNT1 A 0 A_ReFire(); //("Fire")
		SHT2 A 0 A_WeaponOffset(0,32);	//pA;oA(0,0)
		SHT2 A 1 A_ReFire();
		goto Ready.Enhanced;
	AltFlash.Left:
		// TNT1 A 0 A_JumpIf(GetCVAR("fdoom_muzzle")==1,"AltFlash.Left1");
		SH2L E 4 bright A_Light1();
		SH2L F 3 bright A_light2();
		goto lightdone;
	AltFlash.Right:
		// TNT1 A 0 A_JumpIf(GetCVAR("fdoom_muzzle")==1,"AltFlash.Right1");
		SH2L C 4 bright A_Light1();
		SH2L D 3 bright A_light2();
		goto lightdone;
}
}