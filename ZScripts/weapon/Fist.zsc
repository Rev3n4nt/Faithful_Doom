//******
// FIST
//******

Class WFist : BDoomWeapon replaces Fist
{
int fcombo; // total # of light hits; reset by Light Finisher, Uppercut and Kick)
int lcombo; // # of light hits IN A ROW (at 5th goes to Light Finisher); reset by any finisher
int tcombo; // total # of hits, i.e. length of combo. Increased by puffs (i.e. actually hitting  the enemy)
int hurtchance; // % chance of FORCEPAINing the enemy with light punches (increased with tcombo, clamped at 15-85%)
bool bpunch; //(with Berserk) used left punch?
//int pconnected; // (unused) how many times the punch actually hit something
int targetdistance;
int jangle; //jump angle
Default {
	weapon.selectionorder 370;
	+WEAPON.NOALERT
	weapon.slotnumber 1;
	weapon.slotpriority 0;
	Weapon.Kickback 100;
	Obituary "$OB_MPFIST";
	Tag "$TAG_FIST";
	+WEAPON.WIMPY_WEAPON
	+WEAPON.MELEEWEAPON
}
override void BeginPlay() //required default values for A_CameraSway
	{
	maxOffsetTics = 1;
	offsetTics = -1;
	super.BeginPlay();
	}
override void DoEffect()
	{
	If (Owner)
		{
				bNOAUTOFIRE = false;
				bWIMPY_WEAPON = false;
		//Console.Printf("tcombo "..tcombo);
		}
	Super.DoEffect();
	}

states
	{
	Select:
		//TNT1 AAAAAAAA 0 A_Raise;
		TNT1 A 0 A_WeaponOffset(35.0,60.0,WOF_INTERPOLATE);
		FIS0 AAAAAA 1 {
			A_WeaponOffset(-5.0,-5.0,WOF_ADD|WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
		goto ready;
	Deselect:
		TNT1 A 0 {
			A_ClearOverlays(2,3);
			// invoker.fcombo = 0;
			// invoker.lcombo = 0;
			// invoker.tcombo = 0;
			// invoker.hurtchance = 0;
			speed = 1.0;
			}
		// TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Deselect.Enhanced");
		FIS0 A 1 A_Lower;
		wait;
	Ready:
		TNT1 A 0 {
			A_ClearOverlays(2,3);
			// invoker.fcombo = 0;
			// invoker.lcombo = 0;
			// invoker.tcombo = 0;
			// invoker.hurtchance = 0;
			speed = 1.0;
			}
		// TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Ready.Enhanced");
		FIS0 A 1 A_WeaponReady(WRF_NOSECONDARY);
		loop;
	Fire: //pre-fire 4 tics, fire 13 tics, refire 5 tics
		// TNT1 A 0 A_JumpIf(bdoom_weapons == 1, "Fire.Enhanced");
		TNT1 A 0 A_AlertMonsters;
		// TNT1 A 0 A_jumpifinventory("PowerStrength",1,"FireStrong");
			FIS0 A 1;
			TNT1 A 0 A_playsound("weapons/fist/swing");
			FI10 BCD 1;
			// FIS0 E 3 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff_Vanilla");
			FIS0 E 3 A_Punch();
			FIS0 FGHIJ 2;
		TNT1 A 0 A_Refire;
	FireEnd:
			TNT0 A 1 A_WeaponOffset(0.0,60.0,WOF_INTERPOLATE);
			FIS0 AAAA 1 A_WeaponOffset(0.0,-7.0,WOF_ADD|WOF_INTERPOLATE);
 		goto ready;
	Hold:
		// TNT1 A 0 A_jumpifinventory("PowerStrength",1,"HoldStrong");
			TNT1 A 1;
			FIS0 BCD 1;
			// FIS0 E 3 A_CustomPunch(2*random(1,10), TRUE,0, "FistPuff_Vanilla");
			FIS0 E 3 A_Punch();
			FIS0 FGHIJ 2;
		TNT1 A 0 A_Refire;
		goto FireEnd;
	}
}
/*
Class FistPuff : BdoomPuff
{
Default {
+PUFFGETSOWNER
+PUFFONACTORS
+NOEXTREMEDEATH
attacksound "weapons/fist/hitwall";
seesound "weapons/fist/punch";
mass 1;
	}
}

Class FistPuff_Vanilla : FistPuff
{
Default {
attacksound "none";
seesound "weapons/doompunch";
	}
}

Class FistPuffStrong : FistPuff
{
Default {
decal "FistScorch";
attacksound "weapons/fist/strong";
seesound "weapons/fist/strong";
-NOEXTREMEDEATH
	}
states
	{
	Crash:
		TNT1 A 0 A_JumpIf(bdoom_debris ==0,"Null");
		TNT1 AAAA 0 A_SpawnItemEx("ShotSmoke",frandom(-3.0,3.0),frandom(-3.0,3.0),frandom(-1.0,1.0),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
		TNT1 AAAAAAA 0 A_SpawnItemEx("Wallpart",0,0,0,	random(1,3),0,random(6,12),	random(0,360),0,64);
		stop;
	}
}

// This is tied to BD_Fist, so if the user has comment weapon strings, this should be disabled too

Class BD_Berserk : Berserk replaces Berserk
{
Default {
inventory.pickupsound "pickups/berserk";
	}
	
States
	{
	Pickup:
		TNT1 A 0 {
			A_GiveInventory("PowerStrength");
			HealThing(100, 0);
			A_SelectWeapon("BD_Fist");
			}
		stop;
	}
}
*/