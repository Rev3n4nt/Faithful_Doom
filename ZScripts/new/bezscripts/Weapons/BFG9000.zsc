// --------------------------------------------------------------------------
//
// BFG 9000
//
// --------------------------------------------------------------------------

Class BIG_FUCKING_GUN : BEweapon //Replaces BFG9000
{
	Default
	{
	Height 20;
	Weapon.SelectionOrder 2;
	Weapon.AmmoUse 0;
	Weapon.AmmoGive 40;
	Weapon.AmmoType "BFGPlasma";
    Inventory.PickupSound "BFGREADY";
	//DamageType Desintegrate;
	+FORCEXYBILLBOARD;
//	+WEAPON.NO_AUTO_SWITCH;
    Inventory.PickupMessage "You got the BFG-9000! FUCK YEAH!";
	Tag "$TAG_BFG9000";
	}
	States
	{

	Ready:
	    TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
	//	TNT1 A 0 A_JumpIfInventory("GaussAlready",1,"GaussReady");
		TNT1 A 0 A_GunFlash;
        TNT1 A 0 A_PlaySound("BFGREADY");
        TNT1 AAA 0;
	ReallyReady:
        TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	//	TNT1 A 0 A_JumpIfInventory("bowspecial",1, "TransformToGauss");
		TNT1 A 0 A_JumpIfInventory("QuickPunching",1, "Punch");
		BFGG A 1 A_WeaponReady;//(WRF_ALLOWUSER1)
		Loop;

	User1:
		BFGG A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,34,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,37,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,41,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,42,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,43,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		BFGG A 1
		{
			A_WeaponOffset(0,45,WOF_INTERPOLATE);
			if(CountInv("BFGLGMode"))
			{
				A_Print("Switched to BFG mode");
				A_TakeInventory("BFGLGMode",1);
			}
			else
			{
				A_Print("Switched to LG mode");
				A_GiveInventory("BFGLGMode",1);
			}
		}
		BFGG A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,42,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,41,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,37,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,34,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		BFGG A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
	Goto ReallyReady;

	Deselect:
	    TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower;
		TNT1 A 0 A_TakeInventory("IsWeaponBFG",1);
		TNT1 A 0 A_Takeinventory("HasCutingWeapon",1);
		TNT1 A 0 A_Takeinventory("HasPlasmaWeapon",1);
		TNT1 A 0 A_TakeInventory("TossGrenade", 1);
		BFGG A 1 A_Lower;
		Loop;

	NoAmmo:
		TNT1 A 0 ;//A_PlaySound("weapons/empty")
		Goto ReallyReady;
	Select:
	TNT1 A 0 A_Takeinventory("HasCutingWeapon",1);
	TNT1 A 0 A_Takeinventory("HasPlasmaWeapon",1);
		TNT1 A 0 A_Takeinventory("FistsSelected",1);
	TNT1 A 0 A_Takeinventory("SawSelected",1);
	TNT1 A 0 A_Takeinventory("ShotgunSelected",1);
	TNT1 A 0 A_Takeinventory("SSGSelected",1);
	TNT1 A 0 A_Takeinventory("MinigunSelected",1);
	TNT1 A 0 A_Takeinventory("PlasmaGunSelected",1);
	TNT1 A 0 A_Takeinventory("RocketLauncherSelected",1);
    TNT1 A 0 A_Takeinventory("GrenadeLauncherSelected",1);
	TNT1 A 0 A_Giveinventory("BFGSelected",1);
	TNT1 A 0 A_Takeinventory("BFG10kSelected",1);
	TNT1 A 0 A_Takeinventory("RailGunSelected",1);
	TNT1 A 0 A_Takeinventory("SubMachineGunSelected",1);
	TNT1 A 0 A_Takeinventory("RevenantLauncherSelected",1);
	TNT1 A 0 A_Takeinventory("LostSoulSelected",1);
	TNT1 A 0 A_Takeinventory("FlameCannonSelected",1);
	TNT1 A 0 A_Takeinventory("HasBarrel",1);
	TNT1 A 0 A_TakeInventory("TossGrenade", 1);
	TNT1 A 0 A_Takeinventory("Zoomed",1);
	TNT1 A 0 A_Takeinventory("ADSmode",1);
    TNT1 A 0 A_ZoomFactor(1.0);
	TNT1 A 0 A_GiveInventory("IsWeaponBFG",1);
		BFGG A 1 A_Raise;
		wait;

	Fire:
	//	TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(14589) == 1, "BDV20bFire");
		TNT1 A 0 A_JumpIf(CountInv("BFGLGMode") == 1, "LGFire");
		TNT1 A 0 A_JumpIfInventory("BFGPlasma",40,2);
        Goto NoAmmo;
        TNT1 AAAA 0;
        TNT1 A 0 A_PlaySound("BFGCHARGE");
		BFGC ABABABABABABABAB 2 BRIGHT { A_FireProjectile("GreenFlareSpawn",0,0,0,0); A_GunFlash("Fov",GFF_NOEXTCHANGE); }
        BFGF A 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_PlaySound("BFGFIRE");
		TNT1 AAA 0 A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_Recoil(8);
        //TNT1 A 0 A_ZoomFactor(1.3);
        TNT1 A 0 BRIGHT A_FireProjectile("Alerter", 0, 0, -1, 0);
		TNT1 A 0 BRIGHT A_FireProjectile("SuperBFGBall");
		TNT1 A 0 A_SetBlend("Green",0.25,30);
		BFGF B 2 BRIGHT;// A_FireProjectile("SuperBFGBall", 0, 1, 0, 0)
		TNT1 A 0 A_TakeInventory("BFGPlasma",40);
		TNT1 A 0 A_FireProjectile("ShakeYourAssDouble", 0, 0, 0, 0);
        BFGF CDEF 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
		TNT1 A 0 A_ZoomFactor(1);
        //TNT1 A 0 A_ZoomFactor(1.0);
        BFGG A 1 BRIGHT;
		BFGG A 4;
        TNT1 A 0 A_Refire;
		Goto ReallyReady;

	LGFire:
		TNT1 A 0
		{
			A_PlaySound("Doom4/Weapon/LightningGun/LightningGunFire", CHAN_WEAPON, 1, 1);
			A_PlaySound("Doom4/Weapon/LightningGun/LG2Loop", 5, 0.5, 1);
		}

	LGFireLoop:
		BFGF G 1 Bright
		{
			A_WeaponOffset(frandom(1.0,2.0),frandom(33.0,34.0));
			A_GunFlash("Null");
			A_RailAttack(random(8,14),1,1,"white","green",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,"LGPuff",0,0,768,1,3,1,"LGBlastTrail",-3);
			A_TakeInventory("BFGPlasma",1);
		}
		BFGF G 1 Bright
		{
			A_GunFlash("Null");
			A_WeaponOffset(frandom(1.2,2.2),frandom(33.2,34.2));

			A_RailAttack(random(8,14),1,1,"white","green",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,"LGPuffNoBlood",0,0,768,1,3,1,"None",-3);

		}
		BFGF DE 1 A_Refire("LGFireLoop");
		Goto EndLGFire;

	EndLGFire:
		BFGF F 1
		{
			A_PlaySound("Doom4/Weapon/LightningGun/LightningGunEnd", CHAN_WEAPON);
			A_StopSound(5);
		}
		Goto ReallyReady;

	Fov:
		TNT1 A 1 A_ZoomFactor(1.000,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.995,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.99,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.985,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.98,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.975,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.97,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.965,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.96,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.955,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.95,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.945,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.94,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.935,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.93,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.925,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.92,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.915,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.91,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.905,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.9,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.895,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.89,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.885,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.88,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.885,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.89,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.895,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.9,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.905,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.91,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.915,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.92,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.925,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.93,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.935,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.94,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.945,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.95,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.955,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.96,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.965,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.97,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.975,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.98,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.985,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.99,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(0.995,ZOOM_NOSCALETURNING);
		TNT1 A 1 A_ZoomFactor(1.000,ZOOM_NOSCALETURNING);
		Stop;

	BDV20bFire:
		TNT1 A 0 A_JumpIfInventory("BFGPlasma",40,2);
        Goto NoAmmo;
		TNT1 A 0 A_PlaySound("BFGCHARGE");
		BFGC ABABABABABABABAB 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        BFGF A 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_PlaySound("BFGFIRE");
		TNT1 AAA 0 A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_Recoil(8);
        //TNT1 A 0 A_ZoomFactor(1.3);
        TNT1 A 0 BRIGHT A_FireProjectile("Alerter", 0, 0, -1, 0);
		TNT1 A 0 BRIGHT A_FireProjectile("AltSuperBFGBall");
		BFGF B 2 BRIGHT;// A_FireProjectile("SuperBFGBall", 0, 1, 0, 0)
		TNT1 A 0 A_TakeInventory("BFGPlasma",40);
		TNT1 A 0 A_FireProjectile("ShakeYourAssDouble", 0, 0, 0, 0);
        BFGF CDEF 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        //TNT1 A 0 A_ZoomFactor(1.0);
        BFGG A 1 BRIGHT;
		BFGG A 4;
        TNT1 A 0  A_Refire;
		Goto ReallyReady;

	AltFire:
	    TNT1 A 0 A_JumpIfInventory("BFGPlasma",15,2);
        Goto NoAmmo;
        TNT1 AAAA 0;
	//	TNT1 A 0 A_PlaySound("BFGCHARGE");
	//	BFGC ABABABABABABABAB 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        BFGF AB 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
		BFGF A 0 A_Refire("AltFire");
	AltFireCont:
        TNT1 A 0 A_PlaySound("weapons/bfgrailgf", 3);
		TNT1 AAA 0 A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_Recoil(4);
        //TNT1 A 0 A_ZoomFactor(1.3);
		TNT1 A 0 A_Quake(5, 5, 0, 32);
		TNT1 A 0 A_ZoomFactor(0.8,ZOOM_NOSCALETURNING);
		TNT1 A 0 A_SetBlend("Green",0.35,40);
		TNT1 A 0 BRIGHT A_RailAttack(223, 0, 1, "Green", "Green", 0, 0, "GaussExplosion")  ;//DoomerRailShot
		BFGF B 4 BRIGHT;// A_FireProjectile("SuperBFGBall", 0, 1, 0, 0)
		TNT1 A 0 A_TakeInventory("BFGPlasma",15);
		TNT1 A 0 A_FireProjectile("ShakeYourAssDouble", 0, 0, 0, 0);
        BFGF CDEF 2 BRIGHT A_FireProjectile("GreenFlareSpawn",0,0,0,0);
        TNT1 A 0 A_ZoomFactor(1.0);
        BFGG A 2 BRIGHT;
		BFGG A 33 A_SetTics(CountInv("PowerD4DFS") ? 16 : 33);
		Goto ReallyReady;

		DoKick:
	    TNT1 A 0;
		TNT1 A 0
		{
			if(countinv("FinisherToken",AAPTR_PLAYER_GETTARGET)>=1 && A_CheckLOF("Null",CLOFF_SETTARGET|CLOFF_NOAIM_VERT|CLOFF_IGNOREGHOST|CLOFF_MUSTBESOLID ,180))
			{ return ResolveState("PermormGloryKill");	}

			return ResolveState(Null);
		}
		TNT1 A 0 A_Takeinventory("Zoomed",1);
        TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_Takeinventory("ADSmode",1);
		NULL A 0 A_JumpIf (vel.z > 0, "AirKick");
		NULL A 0 A_JumpIf (vel.z < 0, "AirKick");
		NULL A 0 A_JumpIf (pitch > 32, "LowKickChecker1");
		Goto InitializeNormalKick;

		LowKickChecker1:
		TNT1 A 0;
	    NULL A 0 A_JumpIf (pitch > 90, "InitializeNormalKick");
		Goto LowKick;

		LowKick:
		TNT1 A 0 A_PlaySound("KICK");
		KICK UVW 1;
		KICK X 1;
		RIFF A 0 A_FireProjectile("KickAttackDetectDowned", 0, 0, 0, 0);
        KICK Y 1;
		KICK Z 4;
		KICK YX 1;
		KICK A 0 A_Takeinventory("Kicking",1);
		KICK WVU 1;
		TNT1 A 0 SetPlayerProperty(0,0,0);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		Goto ReallyReady;

		InitializeNOrmalKick:
        TNT1 A 0 A_jumpifinventory("PowerStrength",1,"BerserkerKick");
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 SetPlayerProperty(0,1,0);
		BFKI BCD 1;
		RIFF A 0 A_FireProjectile("KickAttack", 0, 0, 0, -7);
        BFKI H 5;
		KICK A 0 A_Takeinventory("Kicking",1);
		BFKI I 1;
		BFKI GFEDCBA 1;
		TNT1 A 0 SetPlayerProperty(0,0,0);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		Goto ReallyReady;
    BerserkerKick:
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 SetPlayerProperty(0,1,0);
		BFKI BCD 1;
        RIFF A 0 A_FireProjectile("SuperKickAttack", 0, 0, 0, -7);
        BFKI H 5;
		KICK A 0 A_Takeinventory("Kicking",1);
		BFKI I 1;
		BFKI GFEDCBA 1;
		TNT1 A 0 SetPlayerProperty(0,0,0);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		Goto ReallyReady;

	AirKick:
	    TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick");
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 A_Recoil (-6);
		KICK JKLMN 1;
        RIFF A 0 A_FireProjectile("AirKickAttack", 0, 0, 0, -31);
        KICK O 3;
		KICK A 0 A_Takeinventory("Kicking",1);
		KICK PQRST 2;
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		Goto ReallyReady;

	SuperAirKick:
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 A_Recoil (-6);
		KICK JKLMN 1;
        RIFF A 0 A_FireProjectile("SuperAirKickAttack", 0, 0, 0, -31);
        KICK O 3;
		KICK A 0 A_Takeinventory("Kicking",1);
		KICK PQRST 2;
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		Goto ReallyReady;

	Spawn:
		TRE2 A 0 Nodelay ACS_NamedExecuteAlways("WolfensteinGrossCheck",0);
		BFUG A 0 Thing_ChangeTID(0,748);
		TRE2 A 0 ;//ACS_ExecuteAlways(177,0)
		BFUG A 3;
		TNT1 A 0 A_JumpIfInventory("NaziVerification1", 1, "VerificateNazi");
		Goto Spawn2;

	VerificateNazi:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("NaziVerification2", 1, "IsANazi");
		Goto Spawn2;

	ISANazi:
		TNT1 A 0;
		TNT1 A 0
		{
			bCOUNTKILL = 0;
			bTHRUACTORS = 1;
			bNOTARGET = 1;
		//	bNOBLOCKMAP = 1;
		}
		TNT1 A 0 A_SpawnItemEx("HitlersBuzzsaw", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERPOINTERS | SXF_TRANSFERAMBUSHFLAG);
		Stop;

	Spawn2:
		BFUG A -1;
		Stop;
	}
}
